class Lion is subclass of Piece
/*
class responsible for the pieces of type Lion
*/
operations
	public Lion : Color * nat1 ==> Lion
			Lion(a_color, a_value) ==(
				Piece(a_color, a_value);
			);
			
	--checks if a piece in a certain tile can move to another one
	public canMoveTo : Tile * Tile  ==> bool
	canMoveTo(ti, tf) 
		==  (
				if(
						 (
						 (abs(ti.getCoordinates()(1) - tf.getCoordinates()(1)) = 1 and ti.getCoordinates()(2) - tf.getCoordinates()(2) = 0) or 
						 (abs(ti.getCoordinates()(2) - tf.getCoordinates()(2)) = 1 and ti.getCoordinates()(1) - tf.getCoordinates()(1) = 0)
						 ) 
						and tf.isRiver() = false)
							then (return (tf.getPiece() = nil or ti.getPiece().getValue() >= tf.getPiece().getValue() or tf.isTrap() = true)) 
				else if(isAllRiverH(ti,tf) or isAllRiverV(ti,tf))
							then (return (tf.getPiece() = nil or ti.getPiece().getValue() >= tf.getPiece().getValue() or tf.isTrap() = true))
				else
						return false;
				)
	pre ti <> tf;
			

end Lion