class Board
/*
class responsible for the variables and operations of all the subclasses(types of pieces in the game)
*/
values --Board is a 7x9 rectangle = 63 tiles
		public XSize: nat1 = 7;
		public YSize: nat1 = 9;
instance variables
		private board: seq of seq of Tile := [[]];
		private static boardInstance:Board := new Board(); --Board singleton
operations

		--function responsible for building the game board with all the pieces in place and their corresponding values
		public buildBoard: () ==> ()
		buildBoard() == (
		
			board := [
				[new Tile([1,1], new Lion(<Blue>, 7)), new Tile([2,1]), new Tile([3,1]), new Tile([4,1]), new Tile([5,1]), new Tile([6,1]), new Tile([7,1], new Tiger(<Blue>, 6))], ---first row
				
				[new Tile([1,2]), new Tile([2,2], new Dog(<Blue>, 3)), new Tile([3,2]), new Tile([4,2]), new Tile([5,2]), new Tile([6,2], new Cat(<Blue>, 2)), new Tile([7,2])], ---second row
				
				[new Tile([1,3], new Rat(<Blue>, 1)), new Tile([2,3]), new Tile([3,3], new Leopard(<Blue>, 5)), new Tile([4,3]), new Tile([5,3], new Wolf(<Blue>, 4)), new Tile([6,3]), new Tile([7,3], new Elephant(<Blue>, 8))], --third row
				
				[new Tile([1,4]), new Tile([2,4]), new Tile([3,4]), new Tile([4,4]), new Tile([5,4]), new Tile([6,4]), new Tile([7,4])], --fourth row
				[new Tile([1,5]), new Tile([2,5]), new Tile([3,5]), new Tile([4,5]), new Tile([5,5]), new Tile([6,5]), new Tile([7,5])], --fifth row
				[new Tile([1,6]), new Tile([2,6]), new Tile([3,6]), new Tile([4,6]), new Tile([5,6]), new Tile([6,6]), new Tile([7,6])], --sixth row
				
				[new Tile([1,7], new Elephant(<Red>, 8)), new Tile([2,7]), new Tile([3,7], new Wolf(<Red>, 4)), new Tile([4,7]), new Tile([5,7], new Leopard(<Red>, 5)), new Tile([6,7]), new Tile([7,7], new Rat(<Red>, 1))], --seventh row
				
				[new Tile([1,8]), new Tile([2,8], new Cat(<Red>, 2)), new Tile([3,8]), new Tile([4,8]),new Tile([5,8]), new Tile([6,8], new Dog(<Red>, 3)), new Tile([7,8])], ---eighth row
				
				[new Tile([1,9], new Tiger(<Red>, 6)), new Tile([2,9]), new Tile([3,9]), new Tile([4,9]), new Tile([5,9]), new Tile([6,9]), new Tile([7,9], new Lion(<Red>, 7))] ---ninth row
				];
		);
		
		--returns the board singleton
		public static getBoard: () ==> Board
		getBoard() == return boardInstance;
		
		--get method for a board tile
		pure public getTile: seq of nat1 ==> Tile
		getTile(a_coords) == (
				return board(a_coords(2))(a_coords(1));
		);

end Board